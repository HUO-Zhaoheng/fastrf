<?xml version="1.0"?>
<project name="FastRF" default="compile">
	<property name="private.buildfile" value="build-resources/private/user-antbuild.properties"/>
		<property file="${private.buildfile}"/>
		<property file="build-resources/antbuild.properties"/>
		<property name="version.file" value="fastrf-version.txt"/>
		<property name="version.file.dev" value="version/${version.file}"/>
		<fail message="No Software Directory specified, a private build file should exist in ${private.buildfile} this should specify at the very least 'software.dir'">
			<condition>
				<not>
						<isset property="software.dir"/>
				</not>
			</condition>
		</fail>
	<mkdir dir="lib"/> <!-- Doesn't store anything currently, but if it doesn't exist build will fail. Git won't sync an empty folder either-->
	<path id="compile.classpath">
		<fileset dir="lib" id="lib">
			<include name="*.jar"/>
		</fileset>
	</path>	
	<target name="init"> 
		<mkdir dir="build/classes/"/>
		<mkdir dir="dist"/>
	</target>
	
	<target name="clean">
		<delete dir="build"/>
		<delete dir="dist"/>
	</target>
	<target name="compile" depends="init">
		<javac srcdir="src" destdir="build/classes">
		<classpath refid="compile.classpath"/>
		</javac>
	</target>
	<target name="archive" depends="compile">
		
		<buildnumber file="/ubc/cs/project/arrow/seramage/software/build-numbers/buildnumber-${ant.project.name}"/>
		<property name="version.devstring" value="v${version.major}.${version.minor}dev-${build.number}"/>
		<property name="version.string" value="v${version.major}.${version.minor}${version.beta}-${build.number}"/>
		<echo file="${version.file.dev}">${version.devstring}</echo>
		<copy todir="dist/">
			<fileset refid="lib"/>	
		</copy>
		<echo file="build/classes/${version.file}">${version.string}</echo>
		<jar destfile="dist/fastrf.jar" basedir="build/classes"/>

			
	</target>			
	<target name="deploy" depends="archive">
		<mkdir dir="${deploy.dir}"/>
		<chmod perm="666">
			<fileset dir="${deploy.dir}">
				<include name="*"/>
			</fileset>
		</chmod>
		<copy todir="${deploy.dir}" force="true">
			<fileset dir="dist/">
				<include name="*"/>
			</fileset>
		</copy>
		<chmod perm="444">
				<fileset dir="${deploy.dir}">
						<include name="*"/>
				</fileset>
		</chmod>
		<chmod perm="555">
				<fileset dir="${deploy.dir}">
						<include name="*.sh"/>
				</fileset>
		</chmod>
	</target>
</project>
